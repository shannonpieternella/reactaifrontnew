{"ast":null,"code":"var _jsxFileName = \"/Users/shannonpieternella/Documents/Frontend/src/routing.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport axios from \"axios\"; // Import axios\nimport Login from \"./Login\";\nimport Registration from \"./Registration\";\nimport NoSubscription from \"./NoSubscription\";\nimport App from \"./App\"; // Het dashboard voor ingelogde gebruikers met een actieve subscriptie\nimport { API_BASE_URL } from \"./apiConfig\"; // Make sure this points to the correct API base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Routing = () => {\n  _s();\n  const [hasActiveSubscription, setHasActiveSubscription] = useState(null); // Initially null to wait for the state\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true); // Track loading state\n\n  useEffect(() => {\n    // Call the login endpoint to authenticate the user and retrieve subscription status\n    const loginUser = async () => {\n      try {\n        const response = await axios.post(`${API_BASE_URL}/login`, {\n          email: \"user@example.com\",\n          // Use the actual email from the login form\n          password: \"password123\" // Use the actual password from the login form\n        });\n        console.log(\"Login response data:\", response.data);\n\n        // Assuming the response includes 'authToken' and 'hasActiveSubscription'\n        const {\n          authToken,\n          hasActiveSubscription\n        } = response.data;\n\n        // Set state based on the response\n        if (authToken) {\n          setIsAuthenticated(true);\n          setHasActiveSubscription(hasActiveSubscription);\n        }\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error(\"Login failed:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message);\n        setIsAuthenticated(false);\n        setHasActiveSubscription(false);\n      } finally {\n        setLoading(false); // Set loading to false once the request is done\n      }\n    };\n    loginUser(); // Call the login function when the component mounts\n  }, []);\n\n  // If loading is still true, show a loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this); // Show loading message until state is determined\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Registration, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/aplicatie\",\n        element: hasActiveSubscription ? /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 44\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/no-subscription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/no-subscription\",\n        element: /*#__PURE__*/_jsxDEV(NoSubscription, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Routing, \"EslFVEAHEJVN1N7WgAc0WEWpbV4=\");\n_c = Routing;\nexport default Routing;\nvar _c;\n$RefreshReg$(_c, \"Routing\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","axios","Login","Registration","NoSubscription","App","API_BASE_URL","jsxDEV","_jsxDEV","Routing","_s","hasActiveSubscription","setHasActiveSubscription","isAuthenticated","setIsAuthenticated","loading","setLoading","loginUser","response","post","email","password","console","log","data","authToken","error","_error$response","_error$response$data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","_c","$RefreshReg$"],"sources":["/Users/shannonpieternella/Documents/Frontend/src/routing.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport axios from \"axios\"; // Import axios\nimport Login from \"./Login\";\nimport Registration from \"./Registration\";\nimport NoSubscription from \"./NoSubscription\";\nimport App from \"./App\"; // Het dashboard voor ingelogde gebruikers met een actieve subscriptie\nimport { API_BASE_URL } from \"./apiConfig\"; // Make sure this points to the correct API base URL\n\nconst Routing = () => {\n  const [hasActiveSubscription, setHasActiveSubscription] = useState(null); // Initially null to wait for the state\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true); // Track loading state\n\n  useEffect(() => {\n    // Call the login endpoint to authenticate the user and retrieve subscription status\n    const loginUser = async () => {\n      try {\n        const response = await axios.post(`${API_BASE_URL}/login`, {\n          email: \"user@example.com\", // Use the actual email from the login form\n          password: \"password123\",   // Use the actual password from the login form\n        });\n\n        console.log(\"Login response data:\", response.data);\n\n        // Assuming the response includes 'authToken' and 'hasActiveSubscription'\n        const { authToken, hasActiveSubscription } = response.data;\n\n        // Set state based on the response\n        if (authToken) {\n          setIsAuthenticated(true);\n          setHasActiveSubscription(hasActiveSubscription);\n        }\n      } catch (error) {\n        console.error(\"Login failed:\", error.response?.data?.error || error.message);\n        setIsAuthenticated(false);\n        setHasActiveSubscription(false);\n      } finally {\n        setLoading(false); // Set loading to false once the request is done\n      }\n    };\n\n    loginUser(); // Call the login function when the component mounts\n  }, []);\n\n  // If loading is still true, show a loading state\n  if (loading) {\n    return <div>Loading...</div>; // Show loading message until state is determined\n  }\n\n  return (\n    <Router>\n      <Routes>\n        {/* Route for Login */}\n        <Route path=\"/\" element={<Login />} />\n\n        {/* Route for Registration */}\n        <Route path=\"/register\" element={<Registration />} />\n\n        {/* Default Route - If not authenticated, go to login */}\n        <Route\n          path=\"/aplicatie\"\n          element={hasActiveSubscription ? <App /> : <Navigate to=\"/no-subscription\" />}\n        />\n\n        {/* Route for No Subscription */}\n        <Route path=\"/no-subscription\" element={<NoSubscription />} />\n\n        {/* If no route matches, go to login */}\n        <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default Routing;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}