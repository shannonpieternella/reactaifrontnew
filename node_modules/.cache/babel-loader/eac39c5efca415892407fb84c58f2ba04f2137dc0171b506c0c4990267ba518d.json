{"ast":null,"code":"var _jsxFileName = \"/Users/shannonpieternella/Documents/Frontend/src/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\"; // For navigating and getting the token from the URL\nimport axios from \"axios\";\nimport { API_BASE_URL } from \"./apiConfig\";\nimport \"./ResetPassword.css\"; // Add your CSS styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const token = searchParams.get(\"token\"); // Get the token from the URL\n\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    try {\n      const response = await axios.post(`${API_BASE_URL}/reset-password`, {\n        token,\n        newPassword\n      });\n      setMessage(response.data.message || \"Password reset successfully.\");\n      setError(\"\");\n\n      // Redirect to the login page after a few seconds\n      setTimeout(() => navigate(\"/login\"), 3000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"An error occurred. Please try again.\");\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container reset-password\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleResetPassword,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"input\",\n            placeholder: \"New Password\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"input\",\n            placeholder: \"Confirm Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"RpYyrOlZI9fhE5BZxLS7UnMTBZM=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useSearchParams","axios","API_BASE_URL","jsxDEV","_jsxDEV","ResetPassword","_s","searchParams","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","message","setMessage","navigate","token","get","handleResetPassword","e","preventDefault","response","post","data","setTimeout","err","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/shannonpieternella/Documents/Frontend/src/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\"; // For navigating and getting the token from the URL\nimport axios from \"axios\";\nimport { API_BASE_URL } from \"./apiConfig\";\nimport \"./ResetPassword.css\"; // Add your CSS styling\n\nconst ResetPassword = () => {\n  const [searchParams] = useSearchParams();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const token = searchParams.get(\"token\"); // Get the token from the URL\n\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n\n    if (newPassword !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(`${API_BASE_URL}/reset-password`, {\n        token,\n        newPassword,\n      });\n      setMessage(response.data.message || \"Password reset successfully.\");\n      setError(\"\");\n\n      // Redirect to the login page after a few seconds\n      setTimeout(() => navigate(\"/login\"), 3000);\n    } catch (err) {\n      setError(err.response?.data?.error || \"An error occurred. Please try again.\");\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div className=\"background\">\n      <div className=\"container reset-password\">\n        <h1 className=\"title\">Reset Your Password</h1>\n        {message && <p className=\"success-message\">{message}</p>}\n        {error && <p className=\"error-message\">{error}</p>}\n        <form className=\"form\" onSubmit={handleResetPassword}>\n          <div className=\"input-container\">\n            <input\n              type=\"password\"\n              className=\"input\"\n              placeholder=\"New Password\"\n              value={newPassword}\n              onChange={(e) => setNewPassword(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-container\">\n            <input\n              type=\"password\"\n              className=\"input\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"button\">Reset Password</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}